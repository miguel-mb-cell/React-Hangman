/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 HangmanIcon.gltf
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

function HangmanIcon(props) {

  const mesh = useRef()
  useFrame ( () => (mesh.current.rotation.y += 0.01))

  const { nodes, materials } = useGLTF('/HangmanIcon.gltf')

  return (
    <group {...props} dispose={null} scale={.7} ref={mesh}>
      <mesh geometry={nodes.Sphere.geometry} material={materials['Material.001']} position={[0, 1, 0]} scale={.5} />
      <mesh geometry={nodes.Cylinder.geometry} material={materials['Material.002']} scale={[0.4, 0.5, 0.4]} />
      <mesh geometry={nodes.Cylinder001.geometry} material={materials['Material.003']} position={[0, 0, 0.65]} rotation={[-Math.PI / 9, 0, 0]} scale={[0.15, 0.4, 0.15]} />
      <mesh geometry={nodes.Cylinder002.geometry} material={materials['Material.004']} position={[0, -.9, 0.25]} rotation={[-0.03, 0, 0]} scale={[0.15, 0.4, 0.15]} />
      <mesh geometry={nodes.Cylinder003.geometry} material={materials['Material.006']} position={[0, 0, -0.65]} rotation={[Math.PI / 9, 0, 0]} scale={[0.15, 0.4, 0.15]} />
      <mesh geometry={nodes.Cylinder004.geometry} material={materials['Material.005']} position={[0, -.9, -0.25]} rotation={[0.03, 0, 0]} scale={[0.15, 0.4, 0.15]} />
      <mesh geometry={nodes.Cube.geometry} material={materials['Material.007']} position={[0, 2.4, -0.7]} scale={[0.15, 0.15, 1.15]} />
      <mesh geometry={nodes.Cube001.geometry} material={materials['Material.008']} position={[0, .2, -1.7]} scale={[0.15, 2.1, 0.15]} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.009']} position={[0, -2.05, -1.8]} scale={[0.15, 0.15, .8]} />
      <mesh geometry={nodes.Cylinder005.geometry} material={materials['Material.010']} position={[0, 1.9, 0]} scale={[0.05, 0.45, 0.05]} />
    </group>
  )
}

useGLTF.preload('/HangmanIcon.gltf')

export default HangmanIcon
